spring:
  application:
    name: YunTuKuH
  servlet:
    multipart:
      max-file-size: 10MB
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: xxxxxx
    url: jdbc:mysql://localhost:3306/yuntuku
  #redis:
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    password: xxxxxx
    timeout: 5000ms
  #session
  session:
    store-type: redis
    #30天后过期
    timeout: 2592000s
    #分库分表的策略
  # 空间图片分表
  shardingsphere:
    datasource:
      names: yun_picture
      yun_picture:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/yuntuku
        username: root
        password: xxxxxxx
    rules:
      sharding:
        tables:
          picture:
            actual-data-nodes: yun_picture.picture  # 动态分表
            table-strategy:
              standard:
                sharding-column: spaceId
                sharding-algorithm-name: picture_sharding_algorithm  # 使用自定义分片算法
        sharding-algorithms:
          picture_sharding_algorithm:
            type: CLASS_BASED
            props:
              strategy: standard
              algorithmClassName: com.example.yuntukuh.manager.sharding.PictureShardingAlgorithm
    props:
      sql-show: true

server:
  port: 8080
  servlet:
    context-path: /api
    session:
      cookie:
        max-age: 2592000
mybatis-plus:
  configuration:
      # MyBatis 配置
      map-underscore-to-camel-case: false
      #日志
      log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
      enable-sql-runner: true
      db-config:
        logic-delete-field: isDelete # 全局逻辑删除字段名
        logic-delete-value: 1 # 逻辑已删除值
        logic-not-delete-value: 0 # 逻辑未删除值

#接口文档配置
knife4j:
  enable: true
  openapi:
    title: Knife4j官方文档
    # aaa"
    version: v1.0
    group:
      default:
        group-name:
        api-rule: package
        api-rule-resources:
          - com.example.yuntukuh.controller